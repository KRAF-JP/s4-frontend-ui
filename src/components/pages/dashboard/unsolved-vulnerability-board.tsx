import React from 'react'
import styled from 'styled-components'
import Color from '../../../const/color'
import { unsolvedVulnerabilityProps } from '../../../hooks/pages/dashboard/use-dashboard'
import { NextPage } from 'next'
import { LoadingIcon } from '../../atoms/loading-icon'
import { CardDashboard } from '../../atoms/card'
import { Icon } from '../../atoms/icon'

type Props = {
  data: unsolvedVulnerabilityProps
}

const countOmit = (count: number) => {
  if (count > 999) {
    return (
      <span>
        999<Plus>+</Plus>
      </span>
    )
  } else {
    return count
  }
}

const UnsolvedVulnerabilityBoard: NextPage<Props> = (props) => {
  return (
    <VulnCard title={'未対応の脆弱性件数'}>
      {props.data ? (
        <>
          <TotalCount>
            {props.data.total_count ? props.data.total_count : '-'}
          </TotalCount>
          <CountList>
            <CountListItem>
              <Icon.SeverityCritical size={30} />
              <Text color={Color.SEVERITY.CRITICAL}>緊急</Text>
              <Count color={Color.SEVERITY.CRITICAL}>
                {countOmit(props.data.severities_count['5'])}
              </Count>
            </CountListItem>
            <CountListItem>
              <Icon.SeverityHigh size={30} />
              <Text color={Color.SEVERITY.HIGH}>重要</Text>
              <Count color={Color.SEVERITY.HIGH}>
                {countOmit(props.data.severities_count['4'])}
              </Count>
            </CountListItem>
            <CountListItem>
              <Icon.SeverityMedium size={30} />
              <Text>警告</Text>
              <Count>{countOmit(props.data.severities_count['3'])}</Count>
            </CountListItem>
            <CountListItem>
              <Icon.SeverityLow size={30} />
              <Text>注意</Text>
              <Count>{countOmit(props.data.severities_count['2'])}</Count>
            </CountListItem>
            <CountListItem>
              <Icon.SeverityInfo size={30} />
              <Text>情報</Text>
              <Count>{countOmit(props.data.severities_count['1'])}</Count>
            </CountListItem>
          </CountList>
        </>
      ) : (
        <LoadingWrap>
          <LoadingIcon />
        </LoadingWrap>
      )}
    </VulnCard>
  )
}

const VulnCard = styled(CardDashboard)`
  min-width: 500px;
  grid-column: 1/4;
  grid-row: 1/2;
  background: ${Color.PRIMARY._100};
`
const LoadingWrap = styled.div`
  height: 180px;
`
const TotalCount = styled.div`
  margin-bottom: 16px;
  font-family: Roboto, sans-serif;
  font-size: 40px;
  font-weight: 500;
  line-height: 1;
`
const CountList = styled.div`
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: 1fr;
  gap: 16px;
  width: 100%;
`
const CountListItem = styled.div`
  padding: 16px 0;
  height: 140px;
  background: ${Color.COMPONENT.SURFACE};
  border-radius: 8px;
  box-shadow: ${Color.ELEVATION.S};
  text-align: center;
`
const Text = styled.div<{ color?: string }>`
  font-size: 16px;
  font-weight: 500;
  color: ${({ color }) => (color ? color : Color.TEXT.GRAY)};
`
const Count = styled.div<{ color?: string }>`
  font-family: Roboto, sans-serif;
  font-size: 32px;
  font-weight: 500;
  color: ${({ color }) => (color ? color : Color.TEXT.GRAY)};
`
const Plus = styled.span`
  font-size: 20px;
`

export default UnsolvedVulnerabilityBoard
